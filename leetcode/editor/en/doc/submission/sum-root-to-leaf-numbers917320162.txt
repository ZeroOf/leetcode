/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
 public:
  int sumNumbers(TreeNode *root) {
    std::list<TreeNode *> numLine;
    int sum = 0;
    sumNumbers(root, numLine, sum);
    return sum;
  }

  void sumNumbers(TreeNode *root, std::list<TreeNode *> numLine, int &sum) {
    if (nullptr == root) {
      return;
    }
    numLine.push_back(root);
    if (nullptr == root->left && nullptr == root->right) {
      sum += list2Num(numLine);
      return;
    }
    if (root->left) {
      sumNumbers(root->left, numLine, sum);
    }
    if (root->right) {
      sumNumbers(root->right, numLine, sum);
    }
  }
  int list2Num(std::list<TreeNode *> numLine) {
    int ret = 0, digit = 1;
    std::reverse(numLine.begin(), numLine.end());
    for (auto pNode : numLine) {
      ret += pNode->val * digit;
      digit *= 10;
    }
    return ret;
  }
};

//runtime_error:Line 42: Char 13: runtime error: signed integer overflow: 1000000000 * 10 cannot be represented in type 'int' (solution.cpp)
SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior prog_joined.cpp:51:13
//last_testcase:[2,1,null,4,null,7,null,4,null,8,null,3,null,6,null,4,null,7]
