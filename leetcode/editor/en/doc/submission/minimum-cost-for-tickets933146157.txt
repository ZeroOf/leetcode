class Solution {
 public:
  int mincostTickets(vector<int> &days, vector<int> &costs) {
    vector<int> dp(days.back() + 1, 0);
    std::set<int> dayset(days.begin(), days.end());
    for (int i = 1; i < dp.size(); i++) {
      if (dayset.find(i) == dayset.end()) {
        dp[i] = dp[i - 1];
        continue;
      }
      if (i > 30) {
        dp[i] = std::min(dp[i - 1] + costs[0],
                         std::min(dp[i - 7] + costs[1], dp[i - 30] + costs[2]));
      } else if (i > 7) {
        dp[i] = std::min(dp[i - 1] + costs[0],
                         std::min(dp[i - 7] + costs[1], dp[0] + costs[2]));
      } else {
        dp[i] = std::min(dp[i - 1] + costs[0], dp[0] + costs[1]);
      }
    }
    return dp.back();
  }
};

//total_testcases:
//total_correct:
//input_formatted:
//expected_output:
//code_output:
//last_testcase:[1,5,8,10,13,20,29,31,37,48,52,53,54,61,63,64,65,67,72,73,74,79,81,84,85,86,87,88,91,94,98,100,108,112,115,116,120,121,123,131,132,135,137,139,141,145,147,152,163,165,166,173,174,178,179,182,187,198,202,203,204,206,208,210,212,213,216,224,230,234,237,239,240,242,247,249,250,257,259,261,263,265,266,272,273,274,275,279,280,281,284,288,292,293,297,298,300,301,304,306,309,318,323,326,328,330,332,335,336,339,341,342,345,350,351,362,365]
[15,8,3]
